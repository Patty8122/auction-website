version: "3"
services:
  vite-client:
    build:
      context: ./vite-client
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - AUCTION_URL=http://auction-service:3001/
      - USER_URL=http://user-service:3002/
    container_name: vite-client
    depends_on:
      auction-service:
        condition: service_started
      user-service:
        condition: service_started
    volumes:
      - ./vite-client:/usr/src/app
      - client_node_modules:/usr/src/app/node_modules
    stop_signal: SIGKILL

  db-service:
    image: postgres:16-bookworm
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5

  db-gateway-service:
    build: ./db-gateway-service
    environment:
      - PORT=3003
      - PGHOST=db-service
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - AUCTION_DB=auctiondb
    depends_on:
      db-service:
        condition: service_healthy

  auction-service:
    build: ./auction-service
    environment:
      - PORT=3001
      - DB_URL=http://db-gateway-service:3003/
    volumes:
      - ./auction-service:/usr/src/app
      - auction_node_modules:/usr/src/app/node_modules
    stop_signal: SIGKILL
    depends_on:
      db-gateway-service:
        condition: service_started

  user-service:
    build: ./user-service
    environment:
      - PORT=3002
    volumes:
      - ./user-service:/usr/src/app
    stop_signal: SIGKILL

  # Reference: https://github.com/deepshig/rabbitmq-docker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbit_mq
    ports:
        - '5672:5672'
        - '15672:15672'
    volumes:
      - rabbit_mqdata:/usr/share/rabbitmq/data

  email-service:
    build: ./email-service
    environment:
      - AMQP_URL=amqp://rabbit_mq?connection_attempts=10&retry_delay=10
    stop_signal: SIGKILL
    depends_on:
      - rabbitmq

volumes:
  client_node_modules:
  auction_node_modules:
  db_data:
  auction_db_data:
  rabbit_mqdata:
    driver: local