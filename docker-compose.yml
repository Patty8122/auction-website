version: "3"
services:
  vite-client:
    build:
      context: ./vite-client
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - MEDIATOR_URL=http://ui-service:3001
    container_name: vite-client
    depends_on:
      ui-service:
        condition: service_started
    volumes:
      - ./vite-client:/usr/src/app
      - client_node_modules:/usr/src/app/node_modules
    stop_signal: SIGKILL

  ui-service:
    build: ./ui-service
    environment:
      - PORT=3001
    ports:
      - 3001:3001
    volumes:
      - ./ui-service:/usr/src/app
    stop_signal: SIGKILL
    depends_on:
      db-service:
        condition: service_started

  db-service:
    container_name: db-service
    image: postgres:16-bookworm
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    stop_signal: SIGKILL

  auction-service:
    build: ./auction-service
    environment:
      - PORT=3003
      - DB_URL=postgresql://postgres:postgres@db-service:5432/auctiondb
      - DATABASE_URL=postgresql://postgres:postgres@db-service:5432/auctiondb
    ports:
      - 3003:3003
    volumes:
      - ./auction-service:/usr/src/app
      - auction_node_modules:/usr/src/app/node_modules
    stop_signal: SIGKILL
    depends_on:
      db-service:
        condition: service_started

  item-service:
    build: ./item-service
    environment:
      - PORT=3004
      - DATABASE_URL=postgresql://postgres:postgres@db-service:5432/itemdb
    volumes:
      - ./item-service:/usr/src/app
    ports:
      - 3004:3004
    stop_signal: SIGKILL
    # restart: always
    command: ./entrypoint.sh
    depends_on:
      db-service:
        condition: service_started

  user-service:
    build: ./user-service
    ports:
      - 3002:3002
    volumes:
      - ./user-service:/usr/src/app
    stop_signal: SIGKILL
    depends_on:
      db-service:
        condition: service_started

  # Reference: https://github.com/deepshig/rabbitmq-docker
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbit_mq
    ports:
        - '5672:5672'
        - '15672:15672'
    volumes:
      - rabbit_mqdata:/usr/share/rabbitmq/data

  email-service:
    build: ./email-service
    environment:
      - AMQP_URL=amqp://rabbit_mq?connection_attempts=10&retry_delay=10
    stop_signal: SIGKILL
    depends_on:
      - rabbitmq
  
  mongodb_service:
    image: mongo:latest
    container_name: mongodb_service
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: log_db
    volumes:
      - mongodb_data:/data/db
  
  logging-service:
    build: ./logging-service
    environment:
      - AMQP_URL=amqp://rabbit_mq?connection_attempts=10&retry_delay=10
      - MONGODB_HOST=mongodb_service
      - MONGODB_PORT=27017
    depends_on:
      - rabbitmq
      - mongodb_service
    ports:
      - "2000:2000"

volumes:
  client_node_modules:
  auction_node_modules:
  db_data:
  auction_db_data:
  rabbit_mqdata:
    driver: local
  mongodb_data: